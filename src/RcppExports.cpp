// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// filter_check_dosing_table
int filter_check_dosing_table(DataFrame& dosingTable, NumericVector inputs);
RcppExport SEXP _AZRsim_filter_check_dosing_table(SEXP dosingTableSEXP, SEXP inputsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type dosingTable(dosingTableSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type inputs(inputsSEXP);
    rcpp_result_gen = Rcpp::wrap(filter_check_dosing_table(dosingTable, inputs));
    return rcpp_result_gen;
END_RCPP
}
// result_binding
NumericMatrix result_binding(NumericMatrix simres_all, NumericMatrix simres_piece);
RcppExport SEXP _AZRsim_result_binding(SEXP simres_allSEXP, SEXP simres_pieceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type simres_all(simres_allSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type simres_piece(simres_pieceSEXP);
    rcpp_result_gen = Rcpp::wrap(result_binding(simres_all, simres_piece));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP cvodes_simdosingtable(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP cvodesAZRinterface(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_AZRsim_filter_check_dosing_table", (DL_FUNC) &_AZRsim_filter_check_dosing_table, 2},
    {"_AZRsim_result_binding", (DL_FUNC) &_AZRsim_result_binding, 2},
    {"cvodes_simdosingtable",             (DL_FUNC) &cvodes_simdosingtable,             22},
    {"cvodesAZRinterface",                (DL_FUNC) &cvodesAZRinterface,                19},
    {NULL, NULL, 0}
};

RcppExport void R_init_AZRsim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
